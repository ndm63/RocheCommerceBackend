<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.5.RELEASE</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.roche.assignment</groupId>
    <artifactId>commerce-backend</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>commerce-backend</name>
    <description>Home assignment for Roche.  Kind of simple commerce backend with RESTful API.</description>

    <properties>
        <java.version>1.8</java.version>
        <!-- Version for container Image -->
        <spring-boot.build-image.imageName>inforisk/${project.artifactId}:${build.version}</spring-boot.build-image.imageName>
        <jib.version>2.6.0</jib.version>
        <!-- Version for Manifest file -->
        <build.version>${project.version}</build.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.junit.vintage</groupId>
                    <artifactId>junit-vintage-engine</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>27.1-jre</version>
        </dependency>

        <!-- TEST -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- ================================ -->
            <!-- Container image creation -->
            <!-- ================================ -->
            <plugin>
                <groupId>com.google.cloud.tools</groupId>
                <artifactId>jib-maven-plugin</artifactId>
                <version>${jib.version}</version>
                <configuration>
                    <containerizingMode>packaged</containerizingMode>
                    <to>
                        <image>${spring-boot.build-image.imageName}</image>
                    </to>
                </configuration>
            </plugin>
            <!-- ================================ -->
            <!-- Set version in MANIFEST.MF file -->
            <!-- ================================ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifestEntries>
                            <Implementation-Version>${build.version}</Implementation-Version>
                            <Build-Time>${maven.build.timestamp}</Build-Time>
                        </manifestEntries>
                        <manifest>
                            <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            <!-- Exclude end-to-end tests from regular unit testing. This won't work in Eclipse -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>%regex[.*TestE2E]</exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- Added so that we can push the jar to InfoRisk customer Nexus Maven repository. -->
    <distributionManagement>
        <repository>
            <id>nexus_maven_hosted_inforisk_customer_releases</id>
            <name>InfoRisk Nexus Maven hosted customer releases</name>
            <url>https://nexus.inforisk.es/nexus/repository/maven_hosted_inforisk_customer_releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus_maven_hosted_inforisk_customer_snapshots</id>
            <name>InfoRisk Nexus Maven hosted customer snapshots</name>
            <url>https://nexus.inforisk.es/nexus/repository/maven_hosted_inforisk_customer_snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


</project>
